<?php

/**
 * PluginaEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginaEvent extends BaseaEvent
{
  public $engine = 'aEvent';
  
  public function getTemplateDefaults()
  {
    return array(
      'singleColumnTemplate' => array(
        'name' => 'Single Column',
        'areas' => array('blog-body')
      )
    );
  }
  
  public function getVirtualPageSlug()
  {
    return '@a_event_search_redirect?id=' . $this->id;
  }

  public function getYear()
  {
    return date('Y', strtotime($this->getStartDate()));
  }

  public function getMonth()
  {
    return date('m', strtotime($this->getStartDate()));
  }

  public function getDay()
  {
    return date('d', strtotime($this->getStartDate()));
  }

  // leaving off the time is not universally supported (Outlook 2003, for one)
  public function getVcalStartDateTime()
  {
    if (!is_null($this->getStartTime()))
    {
      $start = aDate::normalize($this->getStartDate()) + aDate::normalize($this->getStartTime(), true);
    }
    else
    {
      $start = aDate::normalize($this->getStartDate());
    }
    $when = gmdate('Ymd\THis', $start) . 'Z';
    return $when;
  }

  public function getVcalEndDateTime()
  {
    if (!is_null($this->getEndTime()))
    {
      $end = aDate::normalize($this->getEndDate()) + aDate::normalize($this->getEndTime(), true);
    }
    else
    {
      // Ends at 11:59:59
      $end = aDate::normalize($this->getEndDate()) + 60 * 3600 + 59 * 60 + 59;
    }
    $when = gmdate('Ymd\THis', $end) . 'Z';
    return $when;
  }

  public function getVcalPublishedAtDateTime()
  {
    $when = aDate::normalize($this->getPublishedAt());
    return gmdate('Ymd\THis', $when) . 'Z';
  }

  // Google Calendar
  public function getUTCDateRange()
  {
    return $this->getVcalStartDateTime() . '/' . $this->getVcalEndDateTime();
  }
  
  public function isAllDay()
  {
    return (is_null($this->start_time) && is_null($this->end_time));
  }  
}
